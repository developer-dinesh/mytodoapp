/*! react-split-grid - v1.0.3 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("react"),require("prop-types"),require("split-grid")):"function"==typeof define&&define.amd?define(["react","prop-types","split-grid"],e):(t=t||self).ReactSplitGrid=e(t.React,t.PropTypes,t.Split)}(this,(function(t,e,r){"use strict";function o(t,e){var r={};for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&-1===e.indexOf(o)&&(r[o]=t[o]);return r}t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,r=r&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r;var i=function(e){function i(t){e.call(this,t),this.columnGutters={},this.rowGutters={},this.state={gridTemplateColumns:t.gridTemplateColumns?t.gridTemplateColumns:null,gridTemplateRows:t.gridTemplateRows?t.gridTemplateRows:null},this.getGridProps=this.getGridProps.bind(this),this.getGutterProps=this.getGutterProps.bind(this),this.handleDragStart=this.handleDragStart.bind(this),this.writeStyle=this.writeStyle.bind(this),this.onDrag=this.onDrag.bind(this)}return e&&(i.__proto__=e),i.prototype=Object.create(e&&e.prototype),i.prototype.constructor=i,i.prototype.componentDidMount=function(){var t=this.props,e=(t.children,o(t,["children"]));e.writeStyle=this.writeStyle,e.onDrag=this.onDrag,this.split=r(e)},i.prototype.componentDidUpdate=function(t){var e=this,i=this.props,n=i.columnMinSizes,s=i.rowMinSizes,p=(i.children,o(i,["columnMinSizes","rowMinSizes","children"])),l=t.columnMinSizes,a=t.rowMinSizes,u=["minSize","columnMinSize","rowMinSize","columnMinSizes","rowMinSizes","snapOffset","columnSnapOffset","rowSnapOffset","dragInterval","columnDragInterval","rowDragInterval","cursor","columnCursor","rowCursor"].map((function(r){return e.props[r]!==t[r]})).reduce((function(t,e){return t||e}),!1);n!==l&&(u=!0),s!==a&&(u=!0),u&&(p.columnMinSizes=n,p.rowMinSizes=s,this.split.destroy(!1),this.split=r(p))},i.prototype.componentWillUnmount=function(){this.split.destroy(),delete this.split},i.getDerivedStateFromProps=function(t,e){var r={},o=!1;return t.gridTemplateColumns&&t.gridTemplateColumns!==e.gridTemplateColumns&&(r.gridTemplateColumns=t.gridTemplateColumns,o=!0),t.gridTemplateRows&&t.gridTemplateRows!==e.prevGridTemplateRows&&(r.gridTemplateRows=t.gridTemplateRows,o=!0),o?r:null},i.prototype.onDrag=function(t,e,r){var o=this.props.onDrag;o&&o(t,e,r)},i.prototype.getGridProps=function(){var t=this.state,e=t.gridTemplateColumns,r=t.gridTemplateRows,o={};return e&&(o.gridTemplateColumns=e),r&&(o.gridTemplateRows=r),{style:o}},i.prototype.getGutterProps=function(t,e){return{onMouseDown:this.handleDragStart(t,e),onTouchStart:this.handleDragStart(t,e)}},i.prototype.handleDragStart=function(t,e){var r=this;return function(o){r.split.handleDragStart(o,t,e)}},i.prototype.writeStyle=function(t,e,r){var o={};"grid-template-columns"===e?o.gridTemplateColumns=r:"grid-template-rows"===e&&(o.gridTemplateRows=r),this.setState(o)},i.prototype.render=function(){var e=this.props,r=e.component,o=e.render,i=e.children,n={getGridProps:this.getGridProps,getGutterProps:this.getGutterProps};return r?t.createElement(r,n):o?o(n):i?"function"==typeof i?i(n):0!==t.Children.count(i)?t.Children.only(i):null:null},i}(t.Component);return i.propTypes={component:e.element,render:e.func,children:e.element,gridTemplateColumns:e.string,gridTemplateRows:e.string,columnMinSizes:e.arrayOf(e.number),rowMinSizes:e.arrayOf(e.number),onDrag:e.func},i.defaultProps={component:void 0,render:void 0,children:void 0,gridTemplateColumns:void 0,gridTemplateRows:void 0,columnMinSizes:void 0,rowMinSizes:void 0,onDrag:void 0},i}));
//# sourceMappingURL=react-split-grid.min.js.map
