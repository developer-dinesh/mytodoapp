{"version":3,"file":"react-split-grid.min.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Split from 'split-grid'\n\nclass ReactSplitGrid extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.columnGutters = {}\n        this.rowGutters = {}\n\n        this.state = {\n            gridTemplateColumns: props.gridTemplateColumns\n                ? props.gridTemplateColumns\n                : null,\n            gridTemplateRows: props.gridTemplateRows\n                ? props.gridTemplateRows\n                : null,\n        }\n\n        this.getGridProps = this.getGridProps.bind(this)\n        this.getGutterProps = this.getGutterProps.bind(this)\n        this.handleDragStart = this.handleDragStart.bind(this)\n        this.writeStyle = this.writeStyle.bind(this)\n        this.onDrag = this.onDrag.bind(this)\n    }\n\n    componentDidMount() {\n        const { children, ...options } = this.props\n\n        options.writeStyle = this.writeStyle\n        options.onDrag = this.onDrag\n\n        this.split = Split(options)\n    }\n\n    componentDidUpdate(prevProps) {\n        const { columnMinSizes, rowMinSizes, children, ...options } = this.props\n\n        const {\n            columnMinSizes: prevColumnMinSizes,\n            rowMinSizes: prevRowMinSizes,\n        } = prevProps\n\n        const otherProps = [\n            'minSize',\n            'columnMinSize',\n            'rowMinSize',\n            'columnMinSizes',\n            'rowMinSizes',\n            'snapOffset',\n            'columnSnapOffset',\n            'rowSnapOffset',\n            'dragInterval',\n            'columnDragInterval',\n            'rowDragInterval',\n            'cursor',\n            'columnCursor',\n            'rowCursor',\n        ]\n\n        let needsRecreate = otherProps\n            // eslint-disable-next-line react/destructuring-assignment\n            .map(prop => this.props[prop] !== prevProps[prop])\n            .reduce((accum, same) => accum || same, false)\n\n        // TODO use deep equals\n        if (columnMinSizes !== prevColumnMinSizes) {\n            needsRecreate = true\n        }\n\n        if (rowMinSizes !== prevRowMinSizes) {\n            needsRecreate = true\n        }\n\n        // Destroy and re-create split if options changed\n        if (needsRecreate) {\n            options.columnMinSizes = columnMinSizes\n            options.rowMinSizes = rowMinSizes\n\n            this.split.destroy(false)\n\n            this.split = Split(options)\n        }\n    }\n\n    componentWillUnmount() {\n        this.split.destroy()\n        delete this.split\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const state = {}\n        let needsSetState = false\n\n        if (\n            nextProps.gridTemplateColumns &&\n            nextProps.gridTemplateColumns !== prevState.gridTemplateColumns\n        ) {\n            state.gridTemplateColumns = nextProps.gridTemplateColumns\n            needsSetState = true\n        }\n\n        if (\n            nextProps.gridTemplateRows &&\n            nextProps.gridTemplateRows !== prevState.prevGridTemplateRows\n        ) {\n            state.gridTemplateRows = nextProps.gridTemplateRows\n            needsSetState = true\n        }\n\n        if (needsSetState) {\n            return state\n        }\n\n        return null\n    }\n\n    onDrag(direction, track, style) {\n        const { onDrag } = this.props\n\n        if (onDrag) {\n            onDrag(direction, track, style)\n        }\n    }\n\n    getGridProps() {\n        const { gridTemplateColumns, gridTemplateRows } = this.state\n        const style = {}\n\n        if (gridTemplateColumns) {\n            style.gridTemplateColumns = gridTemplateColumns\n        }\n\n        if (gridTemplateRows) {\n            style.gridTemplateRows = gridTemplateRows\n        }\n\n        return {\n            style,\n        }\n    }\n\n    getGutterProps(direction, track) {\n        return {\n            onMouseDown: this.handleDragStart(direction, track),\n            onTouchStart: this.handleDragStart(direction, track),\n        }\n    }\n\n    handleDragStart(direction, track) {\n        return e => {\n            this.split.handleDragStart(e, direction, track)\n        }\n    }\n\n    writeStyle(element, gridTemplateProp, style) {\n        const state = {}\n\n        if (gridTemplateProp === 'grid-template-columns') {\n            state.gridTemplateColumns = style\n        } else if (gridTemplateProp === 'grid-template-rows') {\n            state.gridTemplateRows = style\n        }\n\n        this.setState(state)\n    }\n\n    render() {\n        const { component, render, children } = this.props\n        const props = {\n            getGridProps: this.getGridProps,\n            getGutterProps: this.getGutterProps,\n        }\n\n        /* eslint-disable no-nested-ternary */\n        return component\n            ? React.createElement(component, props)\n            : render\n            ? render(props)\n            : children\n            ? typeof children === 'function'\n                ? children(props)\n                : !(React.Children.count(children) === 0)\n                ? React.Children.only(children)\n                : null\n            : null\n    }\n}\n\nReactSplitGrid.propTypes = {\n    component: PropTypes.element,\n    render: PropTypes.func,\n    children: PropTypes.element,\n    gridTemplateColumns: PropTypes.string,\n    gridTemplateRows: PropTypes.string,\n    columnMinSizes: PropTypes.arrayOf(PropTypes.number),\n    rowMinSizes: PropTypes.arrayOf(PropTypes.number),\n    onDrag: PropTypes.func,\n}\n\nReactSplitGrid.defaultProps = {\n    component: undefined,\n    render: undefined,\n    children: undefined,\n    gridTemplateColumns: undefined,\n    gridTemplateRows: undefined,\n    columnMinSizes: undefined,\n    rowMinSizes: undefined,\n    onDrag: undefined,\n}\n\nexport default ReactSplitGrid\n"],"names":["ReactSplitGrid","props","super","this","columnGutters","rowGutters","state","gridTemplateColumns","gridTemplateRows","getGridProps","bind","getGutterProps","handleDragStart","writeStyle","onDrag","componentDidMount","options","split","Split","componentDidUpdate","prevProps","needsRecreate","map","prop","reduce","accum","same","columnMinSizes","prevColumnMinSizes","rowMinSizes","prevRowMinSizes","destroy","componentWillUnmount","getDerivedStateFromProps","nextProps","prevState","const","needsSetState","prevGridTemplateRows","direction","track","style","onMouseDown","onTouchStart","e","element","gridTemplateProp","setState","render","component","React","createElement","children","Children","count","only","Component","propTypes","PropTypes","func","string","arrayOf","number","defaultProps","undefined"],"mappings":"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"}